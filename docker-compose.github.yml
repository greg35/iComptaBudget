services:
  icomptabudget:
    # Utiliser une image prÃ©-construite au lieu de build
    image: ghcr.io/greg35/icomptabudget:latest
    container_name: icomptabudget_app
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./Comptes.cdb:/app/Comptes.cdb:ro
      - ./iComptaBudgetData.sqlite:/app/iComptaBudgetData.sqlite
    environment:
      - NODE_ENV=production
      - FRONTEND_PORT=3000
      - TZ=${TZ:-Europe/Paris}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const options = { host: 'localhost', port: 3000, path: '/api/health', timeout: 2000 }; const req = http.request(options, (res) => { process.exit(res.statusCode === 200 ? 0 : 1); }); req.on('error', () => process.exit(1)); req.end();"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  data:
  logs: